setTimeout(function(){var Z=document.getElementsByClassName("alert-btn-close");for(let e=0;e<Z.length;e++)Z[e].addEventListener("click",function(){var d=this.parentNode;d.classList.add("animated","fadeOut"),setTimeout(()=>{d.remove()},1e3)});var O=document.getElementsByClassName("dropdown");if(O.length>=1)for(let e=0;e<O.length;e++){var v,w;O[e].addEventListener("click",function(){for(let a=0;a<this.children.length;a++){const l=this.children[a];l.classList.contains("menu")?v=l:l.classList.contains("menu-btn")?$=l:l.classList.contains("menu-overflow")&&(w=l)}v.classList.contains("hidden")?re():ie()});var re=function(){v.classList.remove("hidden"),v.classList.add("fadeIn"),w.classList.remove("hidden")},ie=function(){v.classList.add("hidden"),w.classList.add("hidden"),v.classList.remove("fadeIn")}}var N=["Aaran","Aaren","Aarez","Aarman","Aaron","Aaron-James","Aarron","Aaryan","Aaryn","Aayan","Aazaan","Abaan","Abbas","Abdallah","Abdalroof","Abdihakim","Abdirahman","Abdisalam","Abdul","Abdul-Aziz","Abdulbasir","Abdulkadir","Abdulkarem","Abdulkhader","Abdullah","Abdul-Majeed","Abdulmalik","Abdul-Rehman","Abdur","Abdurraheem","Abdur-Rahman","Abdur-Rehmaan","Abel","Abhinav","Abhisumant","Abid","Abir","Abraham","Abu","Abubakar","Ace","Adain","Adam","Adam-James","Addison","Addisson","Adegbola","Adegbolahan","Aden","Adenn","Adie","Adil","Aditya","Adnan","Adrian","Adrien","Aedan","Aedin","Aedyn","Aeron","Afonso","Ahmad","Ahmed","Ahmed-Aziz","Ahoua","Ahtasham","Aiadan","Aidan","Aiden","Aiden-Jack","Aiden-Vee","Aidian","Aidy","Ailin","Aiman","Ainsley","Ainslie","Airen","Airidas","Airlie","AJ","Ajay","A-Jay","Ajayraj","Akan","Akram","Al","Ala","Alan","Alanas","Alasdair","Alastair","Alber","Albert","Albie","Aldred","Alec","Aled","Aleem","Aleksandar","Aleksander","Aleksandr","Aleksandrs","Alekzander","Alessandro","Alessio","Alex","Alexander","Alexei","Alexx","Alexzander","Alf","Alfee","Alfie","Alfred","Alfy","Alhaji","Al-Hassan","Ali","Aliekber","Alieu","Alihaider","Alisdair","Alishan","Alistair","Alistar","Alister","Aliyaan","Allan","Allan-Laiton","Allen","Allesandro","Allister","Ally","Alphonse","Altyiab","Alum","Alvern","Alvin","Alyas","Amaan","Aman","Amani","Ambanimoh","Ameer","Amgad","Ami","Amin","Amir","Ammaar","Ammar","Ammer","Amolpreet","Amos","Amrinder","Amrit","Amro","Anay","Andrea","Andreas","Andrei","Andrejs","Andrew","Andy","Anees","Anesu","Angel","Angelo","Angus","Anir","Anis","Anish","Anmolpreet","Annan","Anndra","Anselm","Anthony","Anthony-John","Antoine","Anton","Antoni","Antonio","Antony","Antonyo","Anubhav","Aodhan","Aon","Aonghus","Apisai","Arafat","Aran","Arandeep","Arann","Aray","Arayan","Archibald","Archie","Arda","Ardal","Ardeshir","Areeb","Areez","Aref","Arfin","Argyle","Argyll","Ari","Aria","Arian","Arihant","Aristomenis","Aristotelis","Arjuna","Arlo","Armaan","Arman","Armen","Arnab","Arnav","Arnold","Aron","Aronas","Arran","Arrham","Arron","Arryn","Arsalan","Artem","Arthur","Artur","Arturo","Arun","Arunas","Arved","Arya","Aryan","Aryankhan","Aryian","Aryn","Asa","Asfhan","Ash","Ashlee-jay","Ashley","Ashton","Ashton-Lloyd","Ashtyn","Ashwin","Asif","Asim","Aslam","Asrar","Ata","Atal","Atapattu","Ateeq","Athol","Athon","Athos-Carlos","Atli","Atom","Attila","Aulay","Aun","Austen","Austin","Avani","Averon","Avi","Avinash","Avraham","Awais","Awwal","Axel","Ayaan","Ayan","Aydan","Ayden","Aydin","Aydon","Ayman","Ayomide","Ayren","Ayrton","Aytug","Ayub","Ayyub","Azaan","Azedine","Azeem","Azim","Aziz","Azlan","Azzam","Azzedine","Babatunmise","Babur","Bader","Badr","Badsha","Bailee","Bailey","Bailie","Bailley","Baillie","Baley","Balian","Banan","Barath","Barkley","Barney","Baron","Barrie","Barry","Bartlomiej","Bartosz","Basher","Basile","Baxter","Baye","Bayley","Beau","Beinn","Bekim","Believe","Ben","Bendeguz","Benedict","Benjamin","Benjamyn","Benji","Benn","Bennett","Benny","Benoit","Bentley","Berkay","Bernard","Bertie","Bevin","Bezalel","Bhaaldeen","Bharath","Bilal","Bill","Billy","Binod","Bjorn","Blaike","Blaine","Blair","Blaire","Blake","Blazej","Blazey","Blessing","Blue","Blyth","Bo","Boab","Bob","Bobby","Bobby-Lee","Bodhan","Boedyn","Bogdan","Bohbi","Bony","Bowen","Bowie","Boyd","Bracken","Brad","Bradan","Braden","Bradley","Bradlie","Bradly","Brady","Bradyn","Braeden","Braiden","Brajan","Brandan","Branden","Brandon","Brandonlee","Brandon-Lee","Brandyn","Brannan","Brayden","Braydon","Braydyn","Breandan","Brehme","Brendan","Brendon","Brendyn","Breogan","Bret","Brett","Briaddon","Brian","Brodi","Brodie","Brody","Brogan","Broghan","Brooke","Brooklin","Brooklyn","Bruce","Bruin","Bruno","Brunon","Bryan","Bryce","Bryden","Brydon","Brydon-Craig","Bryn","Brynmor","Bryson","Buddy","Bully","Burak","Burhan","Butali","Butchi","Byron","Cabhan","Cadan","Cade","Caden","Cadon","Cadyn","Caedan","Caedyn","Cael","Caelan","Caelen","Caethan","Cahl","Cahlum","Cai","Caidan","Caiden","Caiden-Paul","Caidyn","Caie","Cailaen","Cailean","Caileb-John","Cailin","Cain","Caine","Cairn","Cal","Calan","Calder","Cale","Calean","Caleb","Calen","Caley","Calib","Calin","Callahan","Callan","Callan-Adam","Calley","Callie","Callin","Callum","Callun","Callyn","Calum","Calum-James","Calvin","Cambell","Camerin","Cameron","Campbel","Campbell","Camron","Caolain","Caolan","Carl","Carlo","Carlos","Carrich","Carrick","Carson","Carter","Carwyn","Casey","Casper","Cassy","Cathal","Cator","Cavan","Cayden","Cayden-Robert","Cayden-Tiamo","Ceejay","Ceilan","Ceiran","Ceirin","Ceiron","Cejay","Celik","Cephas","Cesar","Cesare","Chad","Chaitanya","Chang-Ha","Charles","Charley","Charlie","Charly","Chase","Che","Chester","Chevy","Chi","Chibudom","Chidera","Chimsom","Chin","Chintu","Chiqal","Chiron","Chris","Chris-Daniel","Chrismedi","Christian","Christie","Christoph","Christopher","Christopher-Lee","Christy","Chu","Chukwuemeka","Cian","Ciann","Ciar","Ciaran","Ciarian","Cieran","Cillian","Cillin","Cinar","CJ","C-Jay","Clark","Clarke","Clayton","Clement","Clifford","Clyde","Cobain","Coban","Coben","Cobi","Cobie","Coby","Codey","Codi","Codie","Cody","Cody-Lee","Coel","Cohan","Cohen","Colby","Cole","Colin","Coll","Colm","Colt","Colton","Colum","Colvin","Comghan","Conal","Conall","Conan","Conar","Conghaile","Conlan","Conley","Conli","Conlin","Conlly","Conlon","Conlyn","Connal","Connall","Connan","Connar","Connel","Connell","Conner","Connolly","Connor","Connor-David","Conor","Conrad","Cooper","Copeland","Coray","Corben","Corbin","Corey","Corey-James","Corey-Jay","Cori","Corie","Corin","Cormac","Cormack","Cormak","Corran","Corrie","Cory","Cosmo","Coupar","Craig","Craig-James","Crawford","Creag","Crispin","Cristian","Crombie","Cruiz","Cruz","Cuillin","Cullen","Cullin","Curtis","Cyrus","Daanyaal","Daegan","Daegyu","Dafydd","Dagon","Dailey","Daimhin","Daithi","Dakota","Daksh","Dale","Dalong","Dalton","Damian","Damien","Damon","Dan","Danar","Dane","Danial","Daniel","Daniele","Daniel-James","Daniels","Daniil","Danish","Daniyal","Danniel","Danny","Dante","Danyal","Danyil","Danys","Daood","Dara","Darach","Daragh","Darcy","D'arcy","Dareh","Daren","Darien","Darius","Darl","Darn","Darrach","Darragh","Darrel","Darrell","Darren","Darrie","Darrius","Darroch","Darryl","Darryn","Darwyn","Daryl","Daryn","Daud","Daumantas","Davi","David","David-Jay","David-Lee","Davie","Davis","Davy","Dawid","Dawson","Dawud","Dayem","Daymian","Deacon","Deagan","Dean","Deano","Decklan","Declain","Declan","Declyan","Declyn","Dedeniseoluwa","Deecan","Deegan","Deelan","Deklain-Jaimes","Del","Demetrius","Denis","Deniss","Dennan","Dennin","Dennis","Denny","Dennys","Denon","Denton","Denver","Denzel","Deon","Derek","Derick","Derin","Dermot","Derren","Derrie","Derrin","Derron","Derry","Derryn","Deryn","Deshawn","Desmond","Dev","Devan","Devin","Devlin","Devlyn","Devon","Devrin","Devyn","Dex","Dexter","Dhani","Dharam","Dhavid","Dhyia","Diarmaid","Diarmid","Diarmuid","Didier","Diego","Diesel","Diesil","Digby","Dilan","Dilano","Dillan","Dillon","Dilraj","Dimitri","Dinaras","Dion","Dissanayake","Dmitri","Doire","Dolan","Domanic","Domenico","Domhnall","Dominic","Dominick","Dominik","Donald","Donnacha","Donnie","Dorian","Dougal","Douglas","Dougray","Drakeo","Dre","Dregan","Drew","Dugald","Duncan","Duriel","Dustin","Dylan","Dylan-Jack","Dylan-James","Dylan-John","Dylan-Patrick","Dylin","Dyllan","Dyllan-James","Dyllon","Eadie","Eagann","Eamon","Eamonn","Eason","Eassan","Easton","Ebow","Ed","Eddie","Eden","Ediomi","Edison","Eduardo","Eduards","Edward","Edwin","Edwyn","Eesa","Efan","Efe","Ege","Ehsan","Ehsen","Eiddon","Eidhan","Eihli","Eimantas","Eisa","Eli","Elias","Elijah","Eliot","Elisau","Eljay","Eljon","Elliot","Elliott","Ellis","Ellisandro","Elshan","Elvin","Elyan","Emanuel","Emerson","Emil","Emile","Emir","Emlyn","Emmanuel","Emmet","Eng","Eniola","Enis","Ennis","Enrico","Enrique","Enzo","Eoghain","Eoghan","Eoin","Eonan","Erdehan","Eren","Erencem","Eric","Ericlee","Erik","Eriz","Ernie-Jacks","Eroni","Eryk","Eshan","Essa","Esteban","Ethan","Etienne","Etinosa","Euan","Eugene","Evan","Evann","Ewan","Ewen","Ewing","Exodi","Ezekiel","Ezra","Fabian","Fahad","Faheem","Faisal","Faizaan","Famara","Fares","Farhaan","Farhan","Farren","Farzad","Fauzaan","Favour","Fawaz","Fawkes","Faysal","Fearghus","Feden","Felix","Fergal","Fergie","Fergus","Ferre","Fezaan","Fiachra","Fikret","Filip","Filippo","Finan","Findlay","Findlay-James","Findlie","Finlay","Finley","Finn","Finnan","Finnean","Finnen","Finnlay","Finnley","Fintan","Fionn","Firaaz","Fletcher","Flint","Florin","Flyn","Flynn","Fodeba","Folarinwa","Forbes","Forgan","Forrest","Fox","Francesco","Francis","Francisco","Franciszek","Franco","Frank","Frankie","Franklin","Franko","Fraser","Frazer","Fred","Freddie","Frederick","Fruin","Fyfe","Fyn","Fynlay","Fynn","Gabriel","Gallagher","Gareth","Garren","Garrett","Garry","Gary","Gavin","Gavin-Lee","Gene","Geoff","Geoffrey","Geomer","Geordan","Geordie"],te=["Aaran","Aaren","Aarez","Aarman","Aaron","Aaron-James","Aarron","Aaryan","Aaryn","Aayan","Aazaan","Abaan","Abbas","Abdallah","Abdalroof","Abdihakim","Abdirahman","Abdisalam","Abdul","Abdul-Aziz","Abdulbasir","Abdulkadir","Abdulkarem","Abdulkhader","Abdullah","Abdul-Majeed","Abdulmalik","Abdul-Rehman","Abdur","Abdurraheem","Abdur-Rahman","Abdur-Rehmaan","Abel","Abhinav","Abhisumant","Abid","Abir","Abraham","Abu","Abubakar","Ace","Adain","Adam","Adam-James","Addison","Addisson","Adegbola","Adegbolahan","Aden","Adenn","Adie","Adil","Aditya","Adnan","Adrian","Adrien","Aedan","Aedin","Aedyn","Aeron","Afonso","Ahmad","Ahmed","Ahmed-Aziz","Ahoua","Ahtasham","Aiadan","Aidan","Aiden","Aiden-Jack","Aiden-Vee","Aidian","Aidy","Ailin","Aiman","Ainsley","Ainslie","Airen","Airidas","Airlie","AJ","Ajay","A-Jay","Ajayraj","Akan","Akram","Al","Ala","Alan","Alanas","Alasdair","Alastair","Alber","Albert","Albie","Aldred","Alec","Aled","Aleem","Aleksandar","Aleksander","Aleksandr","Aleksandrs","Alekzander","Alessandro","Alessio","Alex","Alexander","Alexei","Alexx","Alexzander","Alf","Alfee","Alfie","Alfred","Alfy","Alhaji","Al-Hassan","Ali","Aliekber","Alieu","Alihaider","Alisdair","Alishan","Alistair","Alistar","Alister","Aliyaan","Allan","Allan-Laiton","Allen","Allesandro","Allister","Ally","Alphonse","Altyiab","Alum","Alvern","Alvin","Alyas","Amaan","Aman","Amani","Ambanimoh","Ameer","Amgad","Ami","Amin","Amir","Ammaar","Ammar","Ammer","Amolpreet","Amos","Amrinder","Amrit","Amro","Anay","Andrea","Andreas","Andrei","Andrejs","Andrew","Andy","Anees","Anesu","Angel","Angelo","Angus","Anir","Anis","Anish","Anmolpreet","Annan","Anndra","Anselm","Anthony","Anthony-John","Antoine","Anton","Antoni","Antonio","Antony","Antonyo","Anubhav","Aodhan","Aon","Aonghus","Apisai","Arafat","Aran","Arandeep","Arann","Aray","Arayan","Archibald","Archie","Arda","Ardal","Ardeshir","Areeb","Areez","Aref","Arfin","Argyle","Argyll","Ari","Aria","Arian","Arihant","Aristomenis","Aristotelis","Arjuna","Arlo","Armaan","Arman","Armen","Arnab","Arnav","Arnold","Aron","Aronas","Arran","Arrham","Arron","Arryn","Arsalan","Artem","Arthur","Artur","Arturo","Arun","Arunas","Arved","Arya","Aryan","Aryankhan","Aryian","Aryn","Asa","Asfhan","Ash","Ashlee-jay","Ashley","Ashton","Ashton-Lloyd","Ashtyn","Ashwin","Asif","Asim","Aslam","Asrar","Ata","Atal","Atapattu","Ateeq","Athol","Athon","Athos-Carlos","Atli","Atom","Attila","Aulay","Aun","Austen","Austin","Avani","Averon","Avi","Avinash","Avraham","Awais","Awwal","Axel","Ayaan","Ayan","Aydan","Ayden","Aydin","Aydon","Ayman","Ayomide","Ayren","Ayrton","Aytug","Ayub","Ayyub","Azaan","Azedine","Azeem","Azim","Aziz","Azlan","Azzam","Azzedine","Babatunmise","Babur","Bader","Badr","Badsha","Bailee","Bailey","Bailie","Bailley","Baillie","Baley","Balian","Banan","Barath","Barkley","Barney","Baron","Barrie","Barry","Bartlomiej","Bartosz","Basher","Basile","Baxter","Baye","Bayley","Beau","Beinn","Bekim","Believe","Ben","Bendeguz","Benedict","Benjamin","Benjamyn","Benji","Benn","Bennett","Benny","Benoit","Bentley","Berkay","Bernard","Bertie","Bevin","Bezalel","Bhaaldeen","Bharath","Bilal","Bill","Billy","Binod","Bjorn","Blaike","Blaine","Blair","Blaire","Blake","Blazej","Blazey","Blessing","Blue","Blyth","Bo","Boab","Bob","Bobby","Bobby-Lee","Bodhan","Boedyn","Bogdan","Bohbi","Bony","Bowen","Bowie","Boyd","Bracken","Brad","Bradan","Braden","Bradley","Bradlie","Bradly","Brady","Bradyn","Braeden","Braiden","Brajan","Brandan","Branden","Brandon","Brandonlee","Brandon-Lee","Brandyn","Brannan","Brayden","Braydon","Braydyn","Breandan","Brehme","Brendan","Brendon","Brendyn","Breogan","Bret","Brett","Briaddon","Brian","Brodi","Brodie","Brody","Brogan","Broghan","Brooke","Brooklin","Brooklyn","Bruce","Bruin","Bruno","Brunon","Bryan","Bryce","Bryden","Brydon","Brydon-Craig","Bryn","Brynmor","Bryson","Buddy","Bully","Burak","Burhan","Butali","Butchi","Byron","Cabhan","Cadan","Cade","Caden","Cadon","Cadyn","Caedan","Caedyn","Cael","Caelan","Caelen","Caethan","Cahl","Cahlum","Cai","Caidan","Caiden","Caiden-Paul","Caidyn","Caie","Cailaen","Cailean","Caileb-John","Cailin","Cain","Caine","Cairn","Cal","Calan","Calder","Cale","Calean","Caleb","Calen","Caley","Calib","Calin","Callahan","Callan","Callan-Adam","Calley","Callie","Callin","Callum","Callun","Callyn","Calum","Calum-James","Calvin","Cambell","Camerin","Cameron","Campbel","Campbell","Camron","Caolain","Caolan","Carl","Carlo","Carlos","Carrich","Carrick","Carson","Carter","Carwyn","Casey","Casper","Cassy","Cathal","Cator","Cavan","Cayden","Cayden-Robert","Cayden-Tiamo","Ceejay","Ceilan","Ceiran","Ceirin","Ceiron","Cejay","Celik","Cephas","Cesar","Cesare","Chad","Chaitanya","Chang-Ha","Charles","Charley","Charlie","Charly","Chase","Che","Chester","Chevy","Chi","Chibudom","Chidera","Chimsom","Chin","Chintu","Chiqal","Chiron","Chris","Chris-Daniel","Chrismedi","Christian","Christie","Christoph","Christopher","Christopher-Lee","Christy","Chu","Chukwuemeka","Cian","Ciann","Ciar","Ciaran","Ciarian","Cieran","Cillian","Cillin","Cinar","CJ","C-Jay","Clark","Clarke","Clayton","Clement","Clifford","Clyde","Cobain","Coban","Coben","Cobi","Cobie","Coby","Codey","Codi","Codie","Cody","Cody-Lee","Coel","Cohan","Cohen","Colby","Cole","Colin","Coll","Colm","Colt","Colton","Colum","Colvin","Comghan","Conal","Conall","Conan","Conar","Conghaile","Conlan","Conley","Conli","Conlin","Conlly","Conlon","Conlyn","Connal","Connall","Connan","Connar","Connel","Connell","Conner","Connolly","Connor","Connor-David","Conor","Conrad","Cooper","Copeland","Coray","Corben","Corbin","Corey","Corey-James","Corey-Jay","Cori","Corie","Corin","Cormac","Cormack","Cormak","Corran","Corrie","Cory","Cosmo","Coupar","Craig","Craig-James","Crawford","Creag","Crispin","Cristian","Crombie","Cruiz","Cruz","Cuillin","Cullen","Cullin","Curtis","Cyrus","Daanyaal","Daegan","Daegyu","Dafydd","Dagon","Dailey","Daimhin","Daithi","Dakota","Daksh","Dale","Dalong","Dalton","Damian","Damien","Damon","Dan","Danar","Dane","Danial","Daniel","Daniele","Daniel-James","Daniels","Daniil","Danish","Daniyal","Danniel","Danny","Dante","Danyal","Danyil","Danys","Daood","Dara","Darach","Daragh","Darcy","D'arcy","Dareh","Daren","Darien","Darius","Darl","Darn","Darrach","Darragh","Darrel","Darrell","Darren","Darrie","Darrius","Darroch","Darryl","Darryn","Darwyn","Daryl","Daryn","Daud","Daumantas","Davi","David","David-Jay","David-Lee","Davie","Davis","Davy","Dawid","Dawson","Dawud","Dayem","Daymian","Deacon","Deagan","Dean","Deano","Decklan","Declain","Declan","Declyan","Declyn","Dedeniseoluwa","Deecan","Deegan","Deelan","Deklain-Jaimes","Del","Demetrius","Denis","Deniss","Dennan","Dennin","Dennis","Denny","Dennys","Denon","Denton","Denver","Denzel","Deon","Derek","Derick","Derin","Dermot","Derren","Derrie","Derrin","Derron","Derry","Derryn","Deryn","Deshawn","Desmond","Dev","Devan","Devin","Devlin","Devlyn","Devon","Devrin","Devyn","Dex","Dexter","Dhani","Dharam","Dhavid","Dhyia","Diarmaid","Diarmid","Diarmuid","Didier","Diego","Diesel","Diesil","Digby","Dilan","Dilano","Dillan","Dillon","Dilraj","Dimitri","Dinaras","Dion","Dissanayake","Dmitri","Doire","Dolan","Domanic","Domenico","Domhnall","Dominic","Dominick","Dominik","Donald","Donnacha","Donnie","Dorian","Dougal","Douglas","Dougray","Drakeo","Dre","Dregan","Drew","Dugald","Duncan","Duriel","Dustin","Dylan","Dylan-Jack","Dylan-James","Dylan-John","Dylan-Patrick","Dylin","Dyllan","Dyllan-James","Dyllon","Eadie","Eagann","Eamon","Eamonn","Eason","Eassan","Easton","Ebow","Ed","Eddie","Eden","Ediomi","Edison","Eduardo","Eduards","Edward","Edwin","Edwyn","Eesa","Efan","Efe","Ege","Ehsan","Ehsen","Eiddon","Eidhan","Eihli","Eimantas","Eisa","Eli","Elias","Elijah","Eliot","Elisau","Eljay","Eljon","Elliot","Elliott","Ellis","Ellisandro","Elshan","Elvin","Elyan","Emanuel","Emerson","Emil","Emile","Emir","Emlyn","Emmanuel","Emmet","Eng","Eniola","Enis","Ennis","Enrico","Enrique","Enzo","Eoghain","Eoghan","Eoin","Eonan","Erdehan","Eren","Erencem","Eric","Ericlee","Erik","Eriz","Ernie-Jacks","Eroni","Eryk","Eshan","Essa","Esteban","Ethan","Etienne","Etinosa","Euan","Eugene","Evan","Evann","Ewan","Ewen","Ewing","Exodi","Ezekiel","Ezra","Fabian","Fahad","Faheem","Faisal","Faizaan","Famara","Fares","Farhaan","Farhan","Farren","Farzad","Fauzaan","Favour","Fawaz","Fawkes","Faysal","Fearghus","Feden","Felix","Fergal","Fergie","Fergus","Ferre","Fezaan","Fiachra","Fikret","Filip","Filippo","Finan","Findlay","Findlay-James","Findlie","Finlay","Finley","Finn","Finnan","Finnean","Finnen","Finnlay","Finnley","Fintan","Fionn","Firaaz","Fletcher","Flint","Florin","Flyn","Flynn","Fodeba","Folarinwa","Forbes","Forgan","Forrest","Fox","Francesco","Francis","Francisco","Franciszek","Franco","Frank","Frankie","Franklin","Franko","Fraser","Frazer","Fred","Freddie","Frederick","Fruin","Fyfe","Fyn","Fynlay","Fynn","Gabriel","Gallagher","Gareth","Garren","Garrett","Garry","Gary","Gavin","Gavin-Lee","Gene","Geoff","Geoffrey","Geomer","Geordan","Geordie"],x=function(e,i){return Math.floor(Math.random()*(i-e))+e},K=function(e){if(1===e)var i=N[x(0,N.length+1)];else i=N[x(0,N.length+1)]+" "+te[x(0,N.length+1)];return i},U=document.getElementsByClassName("name-1"),P=document.getElementsByClassName("name-2");if(U.length>0)for(let e=0;e<U.length;e++)U[e].innerText=K(1);if(P.length>0)for(let e=0;e<P.length;e++)P[e].innerText=K(2);var le=document.getElementById("navbarToggle"),T=document.getElementById("navbar");le.addEventListener("click",function(){T.classList.contains("md:hidden")?(T.classList.remove("md:hidden"),T.classList.add("fadeIn")):async function(){await(T.classList.remove("fadeIn"),T.classList.add("fadeOut"),void console.log("removed")),console.log("animated"),setTimeout(function(){T.classList.add("md:hidden"),T.classList.remove("fadeOut")},450)}()});var z=function(e,i){return Math.floor(Math.random()*i)+e},M=function(e,i){return Array.from({length:e},()=>Math.floor(Math.random()*i))},G=document.getElementsByClassName("num-2");G.length>0&&function(){for(let e=0;e<G.length;e++)G[e].innerText=z(1,99)}();var j=document.getElementsByClassName("num-3");j.length>0&&function(){for(let e=0;e<j.length;e++)j[e].innerText=z(99,999)}();var _=document.getElementsByClassName("num-4");_.length>0&&function(){for(let e=0;e<_.length;e++)_[e].innerText=z(999,9999)}();var $=document.getElementById("sliderBtn"),b=document.getElementById("sideBar"),Ae=document.getElementById("sideBarHideBtn");$.addEventListener("click",function(){b.classList.contains("md:-ml-64")&&(b.classList.replace("md:-ml-64","md:ml-0"),b.classList.remove("md:slideOutLeft"),b.classList.add("md:slideInLeft"))}),Ae.addEventListener("click",function(){if(b.classList.contains("md:ml-0","slideInLeft")){var e=function(){b.classList.remove("md:slideInLeft"),b.classList.add("md:slideOutLeft"),console.log("hide")};e(),async function(){await e(),setTimeout(function(){b.classList.replace("md:ml-0","md:-ml-64"),console.log("animated")},300)}()}});var I=function(e,i,d,a){return{chart:{height:i,width:"100%",type:e,sparkline:{enabled:!0},toolbar:{show:!1}},grid:{show:!1,padding:{top:0,right:0,bottom:0,left:0}},dataLabels:{enabled:!1},legend:{show:!1},series:[{name:"serie1",data:d}],fill:{colors:[a]},stroke:{colors:[a],width:3},yaxis:{show:!1},xaxis:{show:!1,labels:{show:!1},axisBorder:{show:!1},tooltip:{enabled:!1}}}},R=document.getElementsByClassName("analytics_1");if(null!=R&&typeof R<"u"){var H=new ApexCharts(R[0],I("area","51px",M(10,99),"#4fd1c5")),ue=new ApexCharts(R[1],I("area","51px",M(10,99),"#4c51bf"));H.render(),ue.render()}var ce=document.getElementById("sealsOverview");new ApexCharts(ce,I("bar","100%",M(20,999),"#30aba0")).render(),I={chart:{width:"100%",type:"area",toolbar:{show:!1}},grid:{show:!1,padding:{top:0,right:0,bottom:0,left:0}},dataLabels:{enabled:!1},legend:{show:!1},series:[{name:"serie1",data:[44,55,41,67,22,43,21,41,56,27,43]},{name:"serie2",data:[54,45,51,57,32,33,31,31,46,37,33]}],fill:{type:"gradient",gradient:{shadeIntensity:1,opacityFrom:.9,opacityTo:.7,stops:[0,90,100]},colors:["#4fd1c5"]},stroke:{colors:["#4fd1c5"],width:3},yaxis:{show:!1},xaxis:{categories:[1,2,3,4,5,6,6,7,8,9,10],labels:{show:!1},axisBorder:{show:!1},tooltip:{enabled:!1}}};var Q=document.getElementById("SummaryChart");null!=Q&&typeof Q<"u"&&(H=new ApexCharts(document.querySelector("#SummaryChart"),I)).render();var e,i,o=function(e){var i=/\blang(?:uage)?-([\w-]+)\b/i,d=0,a={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function r(n){return n instanceof l?new l(n.type,r(n.content),n.alias):Array.isArray(n)?n.map(r):n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(r){return Object.prototype.toString.call(r).slice(8,-1)},objId:function(r){return r.__id||Object.defineProperty(r,"__id",{value:++d}),r.__id},clone:function r(n,s){var t,A,E=a.util.type(n);switch(s=s||{},E){case"Object":if(A=a.util.objId(n),s[A])return s[A];for(var h in s[A]=t={},n)n.hasOwnProperty(h)&&(t[h]=r(n[h],s));return t;case"Array":return A=a.util.objId(n),s[A]?s[A]:(s[A]=t=[],n.forEach(function(g,C){t[C]=r(g,s)}),t);default:return n}},getLanguage:function(r){for(;r&&!i.test(r.className);)r=r.parentElement;return r?(r.className.match(i)||[,"none"])[1].toLowerCase():"none"},currentScript:function(){if(typeof document>"u")return null;if("currentScript"in document)return document.currentScript;try{throw new Error}catch(t){var r=(/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(t.stack)||[])[1];if(r){var n=document.getElementsByTagName("script");for(var s in n)if(n[s].src==r)return n[s]}return null}}},languages:{extend:function(r,n){var s=a.util.clone(a.languages[r]);for(var t in n)s[t]=n[t];return s},insertBefore:function(r,n,s,t){var A=(t=t||a.languages)[r],E={};for(var h in A)if(A.hasOwnProperty(h)){if(h==n)for(var g in s)s.hasOwnProperty(g)&&(E[g]=s[g]);s.hasOwnProperty(h)||(E[h]=A[h])}var C=t[r];return t[r]=E,a.languages.DFS(a.languages,function(f,p){p===C&&f!=r&&(this[f]=E)}),E},DFS:function r(n,s,t,A){A=A||{};var E=a.util.objId;for(var h in n)if(n.hasOwnProperty(h)){s.call(n,h,n[h],t||h);var g=n[h],C=a.util.type(g);"Object"!==C||A[E(g)]?"Array"!==C||A[E(g)]||(A[E(g)]=!0,r(g,s,h,A)):(A[E(g)]=!0,r(g,s,null,A))}}},plugins:{},highlightAll:function(r,n){a.highlightAllUnder(document,r,n)},highlightAllUnder:function(r,n,s){var t={callback:s,container:r,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};a.hooks.run("before-highlightall",t),t.elements=Array.prototype.slice.apply(t.container.querySelectorAll(t.selector)),a.hooks.run("before-all-elements-highlight",t);for(var A,E=0;A=t.elements[E++];)a.highlightElement(A,!0===n,t.callback)},highlightElement:function(r,n,s){var t=a.util.getLanguage(r),A=a.languages[t];r.className=r.className.replace(i,"").replace(/\s+/g," ")+" language-"+t;var E=r.parentNode;E&&"pre"===E.nodeName.toLowerCase()&&(E.className=E.className.replace(i,"").replace(/\s+/g," ")+" language-"+t);var h={element:r,language:t,grammar:A,code:r.textContent};function g(f){h.highlightedCode=f,a.hooks.run("before-insert",h),h.element.innerHTML=h.highlightedCode,a.hooks.run("after-highlight",h),a.hooks.run("complete",h),s&&s.call(h.element)}if(a.hooks.run("before-sanity-check",h),!h.code)return a.hooks.run("complete",h),void(s&&s.call(h.element));if(a.hooks.run("before-highlight",h),h.grammar)if(n&&e.Worker){var C=new Worker(a.filename);C.onmessage=function(f){g(f.data)},C.postMessage(JSON.stringify({language:h.language,code:h.code,immediateClose:!0}))}else g(a.highlight(h.code,h.grammar,h.language));else g(a.util.encode(h.code))},highlight:function(r,n,s){var t={code:r,grammar:n,language:s};return a.hooks.run("before-tokenize",t),t.tokens=a.tokenize(t.code,t.grammar),a.hooks.run("after-tokenize",t),l.stringify(a.util.encode(t.tokens),t.language)},matchGrammar:function(r,n,s,t,A,E,h){for(var g in s)if(s.hasOwnProperty(g)&&s[g]){var C=s[g];C=Array.isArray(C)?C:[C];for(var f=0;f<C.length;++f){if(h&&h==g+","+f)return;var p=C[f],ee=p.inside,ae=!!p.lookbehind,J=!!p.greedy,Y=0,Ee=p.alias;if(J&&!p.pattern.global){var ge=p.pattern.toString().match(/[imsuy]*$/)[0];p.pattern=RegExp(p.pattern.source,ge+"g")}p=p.pattern||p;for(var D=t,B=A;D<n.length;B+=n[D].length,++D){var k=n[D];if(n.length>r.length)return;if(!(k instanceof l)){if(J&&D!=n.length-1){if(p.lastIndex=B,!(y=p.exec(r)))break;for(var V=y.index+(ae&&y[1]?y[1].length:0),W=y.index+y[0].length,F=D,L=B,pe=n.length;F<pe&&(L<W||!n[F].type&&!n[F-1].greedy);++F)(L+=n[F].length)<=V&&(++D,B=L);if(n[D]instanceof l)continue;X=F-D,k=r.slice(B,L),y.index-=B}else{p.lastIndex=0;var y=p.exec(k),X=1}if(y){ae&&(Y=y[1]?y[1].length:0),W=(V=y.index+Y)+(y=y[0].slice(Y)).length;var q=k.slice(0,V),ne=k.slice(W),S=[D,X];q&&(++D,B+=q.length,S.push(q));var Ce=new l(g,ee?a.tokenize(y,ee):y,Ee,y,J);if(S.push(Ce),ne&&S.push(ne),Array.prototype.splice.apply(n,S),1!=X&&a.matchGrammar(r,n,s,D,B,!0,g+","+f),E)break}else if(E)break}}}}},tokenize:function(r,n){var s=[r],t=n.rest;if(t){for(var A in t)n[A]=t[A];delete n.rest}return a.matchGrammar(r,s,n,0,0,!1),s},hooks:{all:{},add:function(r,n){var s=a.hooks.all;s[r]=s[r]||[],s[r].push(n)},run:function(r,n){var s=a.hooks.all[r];if(s&&s.length)for(var t,A=0;t=s[A++];)t(n)}},Token:l};function l(r,n,s,t,A){this.type=r,this.content=n,this.alias=s,this.length=0|(t||"").length,this.greedy=!!A}if(e.Prism=a,l.stringify=function r(n,s){if("string"==typeof n)return n;if(Array.isArray(n)){var t="";return n.forEach(function(C){t+=r(C,s)}),t}var A={type:n.type,content:r(n.content,s),tag:"span",classes:["token",n.type],attributes:{},language:s},E=n.alias;E&&(Array.isArray(E)?Array.prototype.push.apply(A.classes,E):A.classes.push(E)),a.hooks.run("wrap",A);var h="";for(var g in A.attributes)h+=" "+g+'="'+(A.attributes[g]||"").replace(/"/g,"&quot;")+'"';return"<"+A.tag+' class="'+A.classes.join(" ")+'"'+h+">"+A.content+"</"+A.tag+">"},!e.document)return e.addEventListener&&(a.disableWorkerMessageHandler||e.addEventListener("message",function(r){var n=JSON.parse(r.data),s=n.language,A=n.immediateClose;e.postMessage(a.highlight(n.code,a.languages[s],s)),A&&e.close()},!1)),a;var u=a.util.currentScript();function c(){a.manual||a.highlightAll()}if(u&&(a.filename=u.src,u.hasAttribute("data-manual")&&(a.manual=!0)),!a.manual){var m=document.readyState;"loading"===m||"interactive"===m&&u&&u.defer?document.addEventListener("DOMContentLoaded",c):window.requestAnimationFrame?window.requestAnimationFrame(c):window.setTimeout(c,16)}return a}(typeof window<"u"?window:typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope?self:{});typeof module<"u"&&module.exports&&(module.exports=o),typeof global<"u"&&(global.Prism=o),o.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:(?!<!--)[^"'\]]|"[^"]*"|'[^']*'|<!--[\s\S]*?-->)*\]\s*)?>/i,greedy:!0},cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i,inside:{punctuation:[/^=/,{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},o.languages.markup.tag.inside["attr-value"].inside.entity=o.languages.markup.entity,o.hooks.add("wrap",function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))}),Object.defineProperty(o.languages.markup.tag,"addInlined",{value:function(e,i){var d={};d["language-"+i]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:o.languages[i]},d.cdata=/^<!\[CDATA\[|\]\]>$/i;var a={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:d}};a["language-"+i]={pattern:/[\s\S]+/,inside:o.languages[i]};var l={};l[e]={pattern:RegExp("(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)".replace(/__/g,e),"i"),lookbehind:!0,greedy:!0,inside:a},o.languages.insertBefore("markup","cdata",l)}}),o.languages.xml=o.languages.extend("markup",{}),o.languages.html=o.languages.markup,o.languages.mathml=o.languages.markup,o.languages.svg=o.languages.markup,function(e){var i=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-]+[\s\S]*?(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\((?!\s*\))\s*)(?:[^()]|\((?:[^()]|\([^()]*\))*\))+?(?=\s*\))/,lookbehind:!0,alias:"selector"}}},url:{pattern:RegExp("url\\((?:"+i.source+"|[^\n\r()]*)\\)","i"),inside:{function:/^url/i,punctuation:/^\(|\)$/}},selector:RegExp("[^{}\\s](?:[^{};\"']|"+i.source+")*?(?=\\s*\\{)"),string:{pattern:i,greedy:!0},property:/[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,important:/!important\b/i,function:/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var d=e.languages.markup;d&&(d.tag.addInlined("style","css"),e.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:d.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:e.languages.css}},alias:"language-css"}},d.tag))}(o),o.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(?:true|false)\b/,function:/\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},o.languages.javascript=o.languages.extend("clike",{"class-name":[o.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\s*)(?:catch|finally)\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],number:/\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,function:/#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,operator:/--|\+\+|\*\*=?|=>|&&|\|\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?[.?]?|[~:]/}),o.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,o.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=(?:\s|\/\*[\s\S]*?\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0},"function-variable":{pattern:/#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,lookbehind:!0,inside:o.languages.javascript},{pattern:/[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,inside:o.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,lookbehind:!0,inside:o.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,lookbehind:!0,inside:o.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),o.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\${|}$/,alias:"punctuation"},rest:o.languages.javascript}},string:/[\s\S]+/}}}),o.languages.markup&&o.languages.markup.tag.addInlined("script","javascript"),o.languages.js=o.languages.javascript,function(e){e.languages.http={"request-line":{pattern:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\s(?:https?:\/\/|\/)\S+\sHTTP\/[0-9.]+/m,inside:{property:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\b/,"attr-name":/:\w+/}},"response-status":{pattern:/^HTTP\/1.[01] \d+.*/m,inside:{property:{pattern:/(^HTTP\/1.[01] )\d+.*/i,lookbehind:!0}}},"header-name":{pattern:/^[\w-]+:(?=.)/m,alias:"keyword"}};var i,d,a,l=e.languages,u={"application/javascript":l.javascript,"application/json":l.json||l.javascript,"application/xml":l.xml,"text/xml":l.xml,"text/html":l.html,"text/css":l.css},c={"application/json":!0,"application/xml":!0};for(var m in u)if(u[m]){i=i||{};var r=c[m]?(a=(d=m).replace(/^[a-z]+\//,""),"(?:"+d+"|\\w+/(?:[\\w.-]+\\+)+"+a+"(?![+\\w.-]))"):m;i[m.replace(/\//g,"-")]={pattern:RegExp("(content-type:\\s*"+r+"[\\s\\S]*?)(?:\\r?\\n|\\r){2}[\\s\\S]*","i"),lookbehind:!0,inside:u[m]}}i&&e.languages.insertBefore("http","header-name",i)}(o),function(e){function i(d,a){return"___"+d.toUpperCase()+a+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(d,a,l,u){if(d.language===a){var c=d.tokenStack=[];d.code=d.code.replace(l,function(m){if("function"==typeof u&&!u(m))return m;for(var r,n=c.length;-1!==d.code.indexOf(r=i(a,n));)++n;return c[n]=m,r}),d.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(d,a){if(d.language===a&&d.tokenStack){d.grammar=e.languages[a];var l=0,u=Object.keys(d.tokenStack);!function c(m){for(var r=0;r<m.length&&!(l>=u.length);r++){var n=m[r];if("string"==typeof n||n.content&&"string"==typeof n.content){var s=u[l],t=d.tokenStack[s],A="string"==typeof n?n:n.content,E=i(a,s),h=A.indexOf(E);if(-1<h){++l;var g=A.substring(0,h),C=new e.Token(a,e.tokenize(t,d.grammar),"language-"+a,t),f=A.substring(h+E.length),p=[];g&&p.push.apply(p,c([g])),p.push(C),f&&p.push.apply(p,c([f])),"string"==typeof n?m.splice.apply(m,[r,1].concat(p)):n.content=p}}else n.content&&c(n.content)}return m}(d.tokens)}}}})}(o),function(e){e.languages.php=e.languages.extend("clike",{keyword:/\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\b/i,boolean:{pattern:/\b(?:false|true)\b/i,alias:"constant"},constant:[/\b[A-Z_][A-Z0-9_]*\b/,/\b(?:null)\b/i],comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0}}),e.languages.insertBefore("php","string",{"shell-comment":{pattern:/(^|[^\\])#.*/,lookbehind:!0,alias:"comment"}}),e.languages.insertBefore("php","comment",{delimiter:{pattern:/\?>$|^<\?(?:php(?=\s)|=)?/i,alias:"important"}}),e.languages.insertBefore("php","keyword",{variable:/\$+(?:\w+\b|(?={))/i,package:{pattern:/(\\|namespace\s+|use\s+)[\w\\]+/,lookbehind:!0,inside:{punctuation:/\\/}}}),e.languages.insertBefore("php","operator",{property:{pattern:/(->)[\w]+/,lookbehind:!0}});var i={pattern:/{\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\{])\$+(?:\w+(?:\[.+?]|->\w+)*)/,lookbehind:!0,inside:e.languages.php};e.languages.insertBefore("php","string",{"nowdoc-string":{pattern:/<<<'([^']+)'(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;/,greedy:!0,alias:"string",inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<'?|[';]$/}}}},"heredoc-string":{pattern:/<<<(?:"([^"]+)"(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;|([a-z_]\w*)(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\2;)/i,greedy:!0,alias:"string",inside:{delimiter:{pattern:/^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<"?|[";]$/}},interpolation:i}},"single-quoted-string":{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0,alias:"string"},"double-quoted-string":{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,alias:"string",inside:{interpolation:i}}}),delete e.languages.php.string,e.hooks.add("before-tokenize",function(d){/<\?/.test(d.code)&&e.languages["markup-templating"].buildPlaceholders(d,"php",/<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#)(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|\/\*[\s\S]*?(?:\*\/|$))*?(?:\?>|$)/gi)}),e.hooks.add("after-tokenize",function(d){e.languages["markup-templating"].tokenizePlaceholders(d,"php")})}(o),i=(e=o).languages.javadoclike={parameter:{pattern:/(^\s*(?:\/{3}|\*|\/\*\*)\s*@(?:param|arg|arguments)\s+)\w+/m,lookbehind:!0},keyword:{pattern:/(^\s*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,lookbehind:!0},punctuation:/[{}]/},Object.defineProperty(i,"addSupport",{value:function(d,a){"string"==typeof d&&(d=[d]),d.forEach(function(l){!function(u,c){var m="doc-comment",r=e.languages[u];if(r){var n=r[m];if(n||(n=(r=e.languages.insertBefore(u,"comment",{"doc-comment":{pattern:/(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,lookbehind:!0,alias:"comment"}}))[m]),n instanceof RegExp&&(n=r[m]={pattern:n}),Array.isArray(n))for(var t=0,A=n.length;t<A;t++)n[t]instanceof RegExp&&(n[t]={pattern:n[t]}),c(n[t]);else c(n)}}(l,function(u){u.inside||(u.inside={}),u.inside.rest=a})})}}),i.addSupport(["java","javascript","php"],i),o.languages.json={property:{pattern:/"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,greedy:!0},string:{pattern:/"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,greedy:!0},comment:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,number:/-?\d+\.?\d*(?:e[+-]?\d+)?/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:true|false)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},o.languages.jsonp=o.languages.extend("json",{punctuation:/[{}[\]();,.]/}),o.languages.insertBefore("jsonp","punctuation",{function:/[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*\()/}),function(e){var i=/("|')(?:\\(?:\r\n?|\n|.)|(?!\1)[^\\\r\n])*\1/;e.languages.json5=e.languages.extend("json",{property:[{pattern:RegExp(i.source+"(?=\\s*:)"),greedy:!0},{pattern:/[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*:)/,alias:"unquoted"}],string:{pattern:i,greedy:!0},number:/[+-]?(?:NaN|Infinity|0x[a-fA-F\d]+|(?:\d+\.?\d*|\.\d+)(?:[eE][+-]?\d+)?)/})}(o),function(e){var i="(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+";e.languages.phpdoc=e.languages.extend("javadoclike",{parameter:{pattern:RegExp("(@(?:global|param|property(?:-read|-write)?|var)\\s+(?:"+i+"\\s+)?)\\$\\w+"),lookbehind:!0}}),e.languages.insertBefore("phpdoc","keyword",{"class-name":[{pattern:RegExp("(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\s+)"+i),lookbehind:!0,inside:{keyword:/\b(?:callback|resource|boolean|integer|double|object|string|array|false|float|mixed|bool|null|self|true|void|int)\b/,punctuation:/[|\\[\]()]/}}]}),e.languages.javadoclike.addSupport("php",e.languages.phpdoc)}(o),o.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:TRUE|FALSE|NULL)\b/i,number:/\b0x[\da-f]+\b|\b\d+\.?\d*|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){var i=e.languages.plsql=e.languages.extend("sql",{comment:[/\/\*[\s\S]*?\*\//,/--.*/]}),d=i.keyword;Array.isArray(d)||(d=i.keyword=[d]),d.unshift(/\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\b/i);var a=i.operator;Array.isArray(a)||(a=i.operator=[a]),a.unshift(/:=/)}(o),o.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0},"string-interpolation":{pattern:/(?:f|rf|fr)(?:("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|rb|br)?("""|''')[\s\S]+?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|rb|br)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^\s*)@\w+(?:\.\w+)*/im,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:True|False|None)\b/,number:/(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*\.?\d*|\.\d+)(?:e[+-]?\d+)?j?\b/i,operator:/[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},o.languages.python["string-interpolation"].inside.interpolation.inside.rest=o.languages.python,o.languages.py=o.languages.python,function(e){e.languages.sass=e.languages.extend("css",{comment:{pattern:/^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t]+.+)*/m,lookbehind:!0}}),e.languages.insertBefore("sass","atrule",{"atrule-line":{pattern:/^(?:[ \t]*)[@+=].+/m,inside:{atrule:/(?:@[\w-]+|[+=])/m}}}),delete e.languages.sass.atrule;var i=/\$[-\w]+|#\{\$[-\w]+\}/,d=[/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|or|not)\b/,{pattern:/(\s+)-(?=\s)/,lookbehind:!0}];e.languages.insertBefore("sass","property",{"variable-line":{pattern:/^[ \t]*\$.+/m,inside:{punctuation:/:/,variable:i,operator:d}},"property-line":{pattern:/^[ \t]*(?:[^:\s]+ *:.*|:[^:\s]+.*)/m,inside:{property:[/[^:\s]+(?=\s*:)/,{pattern:/(:)[^:\s]+/,lookbehind:!0}],punctuation:/:/,variable:i,operator:d,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,e.languages.insertBefore("sass","punctuation",{selector:{pattern:/([ \t]*)\S(?:,?[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,?[^,\r\n]+)*)*/,lookbehind:!0}})}(o),o.languages.scss=o.languages.extend("css",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},atrule:{pattern:/@[\w-]+(?:\([^()]+\)|[^(])*?(?=\s+[{;])/,inside:{rule:/@[\w-]+/}},url:/(?:[-a-z]+-)?url(?=\()/i,selector:{pattern:/(?=\S)[^@;{}()]?(?:[^@;{}()]|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}]+[:{][^}]+))/m,inside:{parent:{pattern:/&/,alias:"important"},placeholder:/%[-\w]+/,variable:/\$[-\w]+|#\{\$[-\w]+\}/}},property:{pattern:/(?:[\w-]|\$[-\w]+|#\{\$[-\w]+\})+(?=\s*:)/,inside:{variable:/\$[-\w]+|#\{\$[-\w]+\}/}}}),o.languages.insertBefore("scss","atrule",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),o.languages.insertBefore("scss","important",{variable:/\$[-\w]+|#\{\$[-\w]+\}/}),o.languages.insertBefore("scss","function",{placeholder:{pattern:/%[-\w]+/,alias:"selector"},statement:{pattern:/\B!(?:default|optional)\b/i,alias:"keyword"},boolean:/\b(?:true|false)\b/,null:{pattern:/\bnull\b/,alias:"keyword"},operator:{pattern:/(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|or|not)(?=\s)/,lookbehind:!0}}),o.languages.scss.atrule.inside.rest=o.languages.scss,typeof self<"u"&&self.Prism&&self.document&&o.languages.markup&&(o.plugins.UnescapedMarkup=!0,o.hooks.add("before-highlightall",function(e){e.selector+=", [class*='lang-'] script[type='text/plain'], [class*='language-'] script[type='text/plain'], script[type='text/plain'][class*='lang-'], script[type='text/plain'][class*='language-']"}),o.hooks.add("before-sanity-check",function(e){if((e.element.matches||e.element.msMatchesSelector).call(e.element,"script[type='text/plain']")){var i=document.createElement("code");return(d=document.createElement("pre")).className=i.className=e.element.className,e.element.dataset&&Object.keys(e.element.dataset).forEach(function(a){Object.prototype.hasOwnProperty.call(e.element.dataset,a)&&(d.dataset[a]=e.element.dataset[a])}),e.code=e.code.replace(/&lt;\/script(>|&gt;)/gi,"<\/script>"),i.textContent=e.code,d.appendChild(i),e.element.parentNode.replaceChild(d,e.element),void(e.element=i)}var d=e.element.parentNode;!e.code&&d&&"pre"==d.nodeName.toLowerCase()&&e.element.childNodes.length&&"#comment"==e.element.childNodes[0].nodeName&&(e.element.textContent=e.code=e.element.childNodes[0].textContent)})),function(){var e=Object.assign||function(a,l){for(var u in l)l.hasOwnProperty(u)&&(a[u]=l[u]);return a};function i(a){this.defaults=e({},a)}function d(a){for(var l=0,u=0;u<a.length;++u)a.charCodeAt(u)=="\t".charCodeAt(0)&&(l+=3);return a.length+l}i.prototype={setDefaults:function(a){this.defaults=e(this.defaults,a)},normalize:function(a,l){for(var u in l=e(this.defaults,l)){var c=u.replace(/-(\w)/g,function(m,r){return r.toUpperCase()});"normalize"!==u&&"setDefaults"!==c&&l[u]&&this[c]&&(a=this[c].call(this,a,l[u]))}return a},leftTrim:function(a){return a.replace(/^\s+/,"")},rightTrim:function(a){return a.replace(/\s+$/,"")},tabsToSpaces:function(a,l){return l=0|l||4,a.replace(/\t/g,new Array(++l).join(" "))},spacesToTabs:function(a,l){return l=0|l||4,a.replace(RegExp(" {"+l+"}","g"),"\t")},removeTrailing:function(a){return a.replace(/\s*?$/gm,"")},removeInitialLineFeed:function(a){return a.replace(/^(?:\r?\n|\r)/,"")},removeIndent:function(a){var l=a.match(/^[^\S\n\r]*(?=\S)/gm);return l&&l[0].length?(l.sort(function(u,c){return u.length-c.length}),l[0].length?a.replace(RegExp("^"+l[0],"gm"),""):a):a},indent:function(a,l){return a.replace(/^[^\S\n\r]*(?=\S)/gm,new Array(++l).join("\t")+"$&")},breakLines:function(a,l){l=!0===l?80:0|l||80;for(var u=a.split("\n"),c=0;c<u.length;++c)if(!(d(u[c])<=l)){for(var m=u[c].split(/(\s+)/g),r=0,n=0;n<m.length;++n){var s=d(m[n]);l<(r+=s)&&(m[n]="\n"+m[n],r=s)}u[c]=m.join("")}return u.join("\n")}},typeof module<"u"&&module.exports&&(module.exports=i),typeof o<"u"&&(o.plugins.NormalizeWhitespace=new i({"remove-trailing":!0,"remove-indent":!0,"left-trim":!0,"right-trim":!0}),o.hooks.add("before-sanity-check",function(a){var l=o.plugins.NormalizeWhitespace;if(!a.settings||!1!==a.settings["whitespace-normalization"])if(a.element&&a.element.parentNode||!a.code){var u=a.element.parentNode,c=/(?:^|\s)no-whitespace-normalization(?:\s|$)/;if(a.code&&u&&"pre"===u.nodeName.toLowerCase()&&!c.test(u.className)&&!c.test(a.element.className)){for(var m=u.childNodes,r="",n="",s=!1,t=0;t<m.length;++t){var A=m[t];A==a.element?s=!0:"#text"===A.nodeName&&(s?n+=A.nodeValue:r+=A.nodeValue,u.removeChild(A),--t)}a.element.children.length&&o.plugins.KeepMarkup?(a.element.innerHTML=l.normalize(r+a.element.innerHTML+n,a.settings),a.code=a.element.textContent):(a.code=r+a.code+n,a.code=l.normalize(a.code,a.settings))}}else a.code=l.normalize(a.code,a.settings)}))}(),function(){if(typeof self<"u"&&self.Prism&&self.document){var e=[],i={},d=function(){};o.plugins.toolbar={};var a=o.plugins.toolbar.registerButton=function(u,c){var m;m="function"==typeof c?c:function(r){var n;return"function"==typeof c.onClick?((n=document.createElement("button")).type="button",n.addEventListener("click",function(){c.onClick.call(this,r)})):"string"==typeof c.url?(n=document.createElement("a")).href=c.url:n=document.createElement("span"),c.className&&n.classList.add(c.className),n.textContent=c.text,n},u in i?console.warn('There is a button with the key "'+u+'" registered already.'):e.push(i[u]=m)},l=o.plugins.toolbar.hook=function(u){var c=u.element.parentNode;if(c&&/pre/i.test(c.nodeName)&&!c.parentNode.classList.contains("code-toolbar")){var m=document.createElement("div");m.classList.add("code-toolbar"),c.parentNode.insertBefore(m,c),m.appendChild(c);var r=document.createElement("div");r.classList.add("toolbar");var n=e,s=function(t){for(;t;){var A=t.getAttribute("data-toolbar-order");if(null!=A)return(A=A.trim()).length?A.split(/\s*,\s*/g):[];t=t.parentElement}}(u.element);s&&(n=s.map(function(t){return i[t]||d})),n.forEach(function(t){var A=t(u);if(A){var E=document.createElement("div");E.classList.add("toolbar-item"),E.appendChild(A),r.appendChild(E)}}),m.appendChild(r)}};a("label",function(u){var c=u.element.parentNode;if(c&&/pre/i.test(c.nodeName)&&c.hasAttribute("data-label")){var m,r,n=c.getAttribute("data-label");try{r=document.querySelector("template#"+n)}catch{}return r?m=r.content:(c.hasAttribute("data-url")?(m=document.createElement("a")).href=c.getAttribute("data-url"):m=document.createElement("span"),m.textContent=n),m}}),o.hooks.add("complete",l)}}(),function(){if(typeof self<"u"&&self.Prism&&self.document)if(o.plugins.toolbar){var e=window.ClipboardJS||void 0;e||"function"!=typeof require||(e=require("clipboard"));var i=[];if(!e){var d=document.createElement("script"),a=document.querySelector("head");d.onload=function(){if(e=window.ClipboardJS)for(;i.length;)i.pop()()},d.src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js",a.appendChild(d)}o.plugins.toolbar.registerButton("copy-to-clipboard",function(l){var u=document.createElement("button");return u.textContent="Copy",e?c():i.push(c),u;function c(){var r=new e(u,{text:function(){return l.code}});r.on("success",function(){u.textContent="Copied!",m()}),r.on("error",function(){u.textContent="Press Ctrl+C to copy",m()})}function m(){setTimeout(function(){u.textContent="Copy"},5e3)}})}else console.warn("Copy to Clipboard plugin loaded before Toolbar plugin.")}()},600);